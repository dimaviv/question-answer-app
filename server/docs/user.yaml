openapi: 3.0.0
info:
  title: Your API Title
  version: 1.0.0
tags:
  - name: User
    description: API for managing users
  - name: Authorization
    description: Authentication operations

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /api/user/registration:
    post:
      summary: Register a new user
      tags: [ Authorization ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Token to authenticate the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /api/user/login:
    post:
      summary: Login with existing credentials
      tags: [ Authorization ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Token to authenticate the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /api/user/auth:
    get:
      summary: Check if the user is authenticated
      tags: [ Authorization ]
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: Token to authenticate the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /login/google:
    get:
      summary: Log in using google oauth 2.0
      tags: [ Authorization ]
      responses:
        '200':
          description: Token to authenticate the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /login/facebook:
    get:
      summary: Log in using facebook oauth 2.0
      tags: [ Authorization ]
      responses:
        '200':
          description: Token to authenticate the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /api/user/most-scored:
    get:
      summary: Get a list of most scored users
      tags: [ User ]
      parameters:
        - in: query
          name: categoryId
          schema:
            type: integer
          description: ID of the category to filter by
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of users to return
      responses:
        '200':
          description: An array of question objects

  /api/user/profile:
    get:
      summary: Get user profile
      tags: [ User ]
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: User profile retrieved successfully.

    patch:
      summary: Update user profile
      tags: [ User ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: User profile updated successfully.
        '429':
          description: Too Many Requests. The nickname can only be changed once every two weeks.

