{"version":3,"file":"static/js/92.06c6234c.chunk.js","mappings":"qIAcA,IAXA,WACI,IAAOA,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,iBAAiB,IAA1DH,WACDI,GAAeC,EAAAA,EAAAA,MAAYD,aAMjC,OALyBJ,EAAWM,MAChC,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,cAAcC,QAAQ,OAAQ,MAAQN,CAAY,MAIrD,CAC/B,C,kFCXA,EAAkC,yC,UCAlC,EAAqC,+CAArC,EAAkH,wDAAlH,EAAiM,iDAAjM,EAAoQ,4CAApQ,EAAkU,4CAAlU,EAA6X,yCAA7X,EAA+a,mCAA/a,EAAme,2CAAne,EAAgiB,4CAAhiB,EAAslB,oC,sCCqFtlB,EAhF2B,WACvB,IAAMO,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,KAEzBC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAwCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAiCpC,OACIG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA2BC,UACvCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAoCC,UAChDH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAA6BC,UACzCC,EAAAA,EAAAA,MAAA,QACIH,UAAWC,EACXG,SA5BK,SAACC,GAEtB,GADAA,EAAEC,iBACCnB,GAAqC,KAAjBM,EAAqB,CACxC,IAAMc,EAAc,CAChBC,KAAMf,EACNgB,WAAYtB,EAAiBuB,GAC7BC,KAAMd,IAEVe,EAAAA,EAAAA,IAAeL,GACVM,MACG,WACIC,QAAQC,IAAI,oBAnB5BrB,EAAgB,IAChBI,EAAgB,MAoBAb,EAAS,eAAD+B,OAAgB7B,EAAiBL,KAAKC,cAAcC,QAAQ,OAAQ,KAChF,IAEHiC,OACG,SAAAC,GAAK,OAAIJ,QAAQI,MAAM,4BAA6BA,EAAM,GAEtE,CACJ,EAQ+ChB,SAAA,EAE3BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAwBC,UAE1CH,EAAAA,EAAAA,KAAA,YACIC,UAAWC,EACXkB,YAAY,mBACZC,MAAO3B,EACP4B,SAAU,SAAAhB,GAAC,OAAIX,EAAgBW,EAAEiB,OAAOF,MAAM,OAGhDjB,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAeC,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAuBC,UACnCH,EAAAA,EAAAA,KAAA,SACIwB,KAAK,OACLb,GAAG,YACHU,MAAOvB,EAAeA,EAAaf,KAAO,GAC1CuC,SAjDR,SAAAhB,GACpBP,EAAgBO,EAAEiB,OAAOE,MAAM,GACnC,OAkDwBzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAwBC,UACpCH,EAAAA,EAAAA,KAAA,UACIwB,KAAK,SACLvB,UAAWC,EAAgBC,SAC9B,sBAUjC,ECrEA,EAVwB,WAGpB,OAFAd,EAAAA,EAAAA,MAGIW,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAwBC,UACrCH,EAAAA,EAAAA,KAAC0B,EAAkB,KAG9B,C","sources":["hooks/UseCategory.js","webpack://new-project/./src/pages/ask-question-page/AskQuestionPage.module.css?768d","webpack://new-project/./src/components/ask-question-page/section-ask-question/SectionAskQuestion.module.css?f8d1","components/ask-question-page/section-ask-question/SectionAskQuestion.jsx","pages/ask-question-page/AskQuestionPage.jsx"],"sourcesContent":["import {useSelector} from 'react-redux';\nimport {useParams} from 'react-router-dom';\n\nfunction useCategory() {\n    const {categories} = useSelector(state => state.categoriesReducer);\n    const categoryName = useParams().categoryName;\n    const selectedCategory = categories.find(\n        category => category.name.toLowerCase().replace(/\\s+/g, '') === categoryName\n    );\n\n\n    return selectedCategory || false;\n}\n\nexport default useCategory;\n","// extracted by mini-css-extract-plugin\nexport default {\"askQuestionPage\":\"AskQuestionPage_askQuestionPage__XFAWW\"};","// extracted by mini-css-extract-plugin\nexport default {\"sectionAskQuestion\":\"SectionAskQuestion_sectionAskQuestion__X-2Ee\",\"sectionAskQuestion__content\":\"SectionAskQuestion_sectionAskQuestion__content__H4QPm\",\"askQuestionContainer\":\"SectionAskQuestion_askQuestionContainer__NM8Gy\",\"askQuestionForm\":\"SectionAskQuestion_askQuestionForm__Dhu92\",\"questionTextBox\":\"SectionAskQuestion_questionTextBox__cDRZb\",\"questionText\":\"SectionAskQuestion_questionText__2nf0h\",\"btnBox\":\"SectionAskQuestion_btnBox__hj-Qs\",\"leftSideBtnBox\":\"SectionAskQuestion_leftSideBtnBox__4vqRG\",\"rightSideBtnBox\":\"SectionAskQuestion_rightSideBtnBox__DVLJT\",\"btnSend\":\"SectionAskQuestion_btnSend__QVjC6\"};","import React, {useState} from 'react';\nimport classes from './SectionAskQuestion.module.css'\nimport {createQuestion} from \"../../../http/questionAPI\";\nimport {useNavigate} from \"react-router-dom\";\nimport useCategory from '../../../hooks/UseCategory';\n\nconst SectionAskQuestion = () => {\n    const navigate = useNavigate()\n    const selectedCategory = useCategory()\n\n    const [questionText, setQuestionText] = useState('')\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    const clearValues = () => {\n        setQuestionText('')\n        setSelectedFile(null)\n    }\n\n    const handleFileInput = e => {\n        setSelectedFile(e.target.files[0]);\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault()\n        if(selectedCategory && questionText !== '') {\n            const newQuestion = {\n                text: questionText,\n                categoryId: selectedCategory.id,\n                file: selectedFile\n            }\n            createQuestion(newQuestion)\n                .then(\n                    () => {\n                        console.log('Question created')\n                        clearValues()\n                        navigate(`/categories/${selectedCategory.name.toLowerCase().replace(/\\s+/g, \"\")}`)\n                    }\n                )\n                .catch(\n                    error => console.error('Error while getting data:', error)\n                )\n        }\n    }\n\n    return (\n        <div className={classes.sectionAskQuestion}>\n            <div className={classes.sectionAskQuestion__content}>\n                <div className={classes.askQuestionContainer}>\n                    <form\n                        className={classes.askQuestionForm}\n                        onSubmit={handleSubmitForm}\n                    >\n                        <div className={classes.questionTextBox}\n                        >\n                      <textarea\n                          className={classes.questionText}\n                          placeholder='I want to ask...'\n                          value={questionText}\n                          onChange={e => setQuestionText(e.target.value)}\n                      />\n                        </div>\n                        <div className={classes.btnBox}>\n                            <div className={classes.leftSideBtnBox}>\n                                <input\n                                    type='file'\n                                    id=\"fileInput\"\n                                    value={selectedFile ? selectedFile.name : ''}\n                                    onChange={handleFileInput}\n                                />\n                            </div>\n                            <div className={classes.rightSideBtnBox}>\n                                <button\n                                    type='submit'\n                                    className={classes.btnSend}\n                                >\n                                    Send\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SectionAskQuestion;","import React from 'react';\nimport classes from './AskQuestionPage.module.css'\nimport SectionAskQuestion from \"../../components/ask-question-page/section-ask-question/SectionAskQuestion\";\nimport useCategory from \"../../hooks/UseCategory\";\n\nconst AskQuestionPage = () => {\n    useCategory();\n\n    return (\n        <div className={classes.askQuestionPage}>\n           <SectionAskQuestion/>\n        </div>\n    );\n};\n\nexport default AskQuestionPage;"],"names":["categories","useSelector","state","categoriesReducer","categoryName","useParams","find","category","name","toLowerCase","replace","navigate","useNavigate","selectedCategory","useCategory","_useState","useState","_useState2","_slicedToArray","questionText","setQuestionText","_useState3","_useState4","selectedFile","setSelectedFile","_jsx","className","classes","children","_jsxs","onSubmit","e","preventDefault","newQuestion","text","categoryId","id","file","createQuestion","then","console","log","concat","catch","error","placeholder","value","onChange","target","type","files","SectionAskQuestion"],"sourceRoot":""}