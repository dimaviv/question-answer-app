[{"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\index.js":"1","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\App.js":"2","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\store\\UserStore.js":"3","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\components\\AppRouter.js":"4","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\components\\NavBar.js":"5","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\routes.js":"6","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\utils\\consts.js":"7","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\pages\\Admin.js":"8","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\pages\\Question.js":"9","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\pages\\Auth.js":"10","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\http\\userAPI.js":"11","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\http\\index.js":"12","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\pages\\Questions.js":"13","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\pages\\Profile.js":"14","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\store\\QuestionStore.js":"15","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\http\\questionAPI.js":"16","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\components\\QuestionItem.js":"17"},{"size":469,"mtime":1638629848633,"results":"18","hashOfConfig":"19"},{"size":889,"mtime":1651166647533,"results":"20","hashOfConfig":"19"},{"size":418,"mtime":1634209345731,"results":"21","hashOfConfig":"19"},{"size":826,"mtime":1634242218854,"results":"22","hashOfConfig":"19"},{"size":2189,"mtime":1635157073319,"results":"23","hashOfConfig":"19"},{"size":735,"mtime":1639646035066,"results":"24","hashOfConfig":"19"},{"size":285,"mtime":1639647187909,"results":"25","hashOfConfig":"19"},{"size":157,"mtime":1638629011193,"results":"26","hashOfConfig":"19"},{"size":1634,"mtime":1639672948066,"results":"27","hashOfConfig":"19"},{"size":2748,"mtime":1651167285388,"results":"28","hashOfConfig":"19"},{"size":695,"mtime":1634242470387,"results":"29","hashOfConfig":"19"},{"size":425,"mtime":1634045500459,"results":"30","hashOfConfig":"19"},{"size":1189,"mtime":1639659012252,"results":"31","hashOfConfig":"19"},{"size":212,"mtime":1635157249671,"results":"32","hashOfConfig":"19"},{"size":760,"mtime":1638634188219,"results":"33","hashOfConfig":"19"},{"size":937,"mtime":1639672888984,"results":"34","hashOfConfig":"19"},{"size":808,"mtime":1650381019105,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ocdekz",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\index.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\App.js",["75"],"import React, {useContext, useEffect, useState} from \"react\";\r\nimport './App.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport AppRouter from \"./components/AppRouter\";\r\nimport NavBar from \"./components/NavBar\"\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"./index\";\r\nimport {check} from \"./http/userAPI\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nconst App = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        check().then(data => {\r\n            user.setUser(true)\r\n            user.setIsAuth(true)\r\n        }).finally(() => setLoading(false))\r\n    },[])\r\n\r\n    if (loading){\r\n        return <Spinner animation={\"grow\"}/>\r\n    }\r\n  return (\r\n    <BrowserRouter>\r\n        <NavBar />\r\n        <AppRouter />\r\n    </BrowserRouter>\r\n  );\r\n});\r\n\r\nexport default App;\r\n","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\store\\UserStore.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\components\\NavBar.js",["76","77"],"import React,{useContext} from 'react';\r\nimport {Context} from  \"../index\"\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {LOGIN_ROUTE, MAIN_ROUTE} from \"../utils/consts\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst NavBar = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const history = useHistory()\r\n\r\n    const logOut = () => {\r\n        user.setUser({})\r\n        user.setIsAuth(false)\r\n\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\"\r\n                    aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <a className=\"navbar-brand\" href=\"/\">Main</a>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\r\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"/login\">Login <span className=\"sr-only\"></span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/registration\">Registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/profile\">Profile</a>\r\n                    </li>\r\n                </ul>\r\n                {user.isAuth ?\r\n                <Button\r\n                    onClick={() => logOut()}\r\n                    variant={\"outline-primary\"}\r\n                    className=\"ml-4\">Log Out</Button>\r\n                    :\r\n                    <Button\r\n                        onClick={() => history.push(LOGIN_ROUTE)}\r\n                        variant={\"outline-primary\"}\r\n                        className=\"ml-4\">Log In</Button>\r\n                }\r\n            </div>\r\n        </nav>\r\n    );\r\n});\r\n\r\nexport default NavBar;","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\routes.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\utils\\consts.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\pages\\Admin.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\pages\\Question.js",["78","79"],"import React, {useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Card, Container, Image, Row} from \"react-bootstrap\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {fetchOneQuestion} from \"../http/questionAPI\";\r\n\r\n\r\nconst Question = () => {\r\n\r\n    const [question, setQuestion] = useState({answers:[]})\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        fetchOneQuestion(id).then(data =>setQuestion(data))\r\n\r\n    },[])\r\n\r\n    return (\r\n        <Container>\r\n            <Card style={{width:500, cursor:'pointer'}} border={\"light\"}>\r\n                <div className=\"text-justify comment mt-4 float-right\">\r\n                    <Image width={50} height={50} src={'https://i.imgur.com/CFpa3nK.jpg'} />\r\n                    <h4>{question.userId}</h4> <span>- {question.createdAt}</span>\r\n                    <p>{question.title}</p>\r\n                </div>\r\n            </Card>\r\n            <h2>Ответы</h2>\r\n            {question.answers.map(answer =>\r\n                <Row className=\"ml-5\" key={answer.id}>\r\n                    <Card style={{width:500, cursor:'pointer'}} border={\"light\"}>\r\n                        <div className=\"text-justify comment mt-4 float-right\">\r\n                            <Image width={50} height={50} src={'https://i.imgur.com/CFpa3nK.jpg'} />\r\n                            <h4>{answer.userId}</h4> <span>- {answer.createdAt}</span>\r\n                            <p>{answer.text}</p>\r\n                        </div>\r\n                    </Card>\r\n                </Row>\r\n            )}\r\n\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Question;","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\pages\\Auth.js",["80"],"import React, {useState, useContext} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Container} from \"react-bootstrap\";\r\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, QUESTIONS_ROUTE} from \"../utils/consts\";\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from  \"../index\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const click = async () => {\r\n        let data;\r\n        try {\r\n            if (isLogin){\r\n                data = await login(email, password);\r\n            }else{\r\n                data = await registration(email, password);\r\n            }\r\n            user.setUser(user)\r\n            user.setIsAuth(true)\r\n            history.push(QUESTIONS_ROUTE)\r\n        }catch (e){\r\n            //alert(\"Entered a wrong username or password\")\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <form>\r\n            <h2 className=\"mt-4\">{isLogin ? 'Login' : 'Registration'}</h2>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                       placeholder=\"Enter email\"\r\n                       value={email}\r\n                       onChange={e => setEmail(e.target.value)}\r\n                />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone\r\n                        else.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            {isLogin ?\r\n                <p>Don't have an account? <NavLink to={REGISTRATION_ROUTE}>Sign Up</NavLink></p>\r\n                :\r\n                <p>Have an account? <NavLink to={LOGIN_ROUTE}>Login</NavLink></p>}\r\n            <Button\r\n            onClick={click}\r\n            >{isLogin ? 'Login' : 'Sign Up'}</Button>\r\n\r\n        </form>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\http\\userAPI.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\http\\index.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\pages\\Questions.js",["81"],"import React, {useContext, useEffect} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchCategories, fetchQuestions} from \"../http/questionAPI\";\r\nimport QuestionItem from \"../components/QuestionItem\";\r\n\r\nconst Questions = observer(() => {\r\n    const {question} = useContext(Context)\r\n\r\n    useEffect(()=>{\r\n        fetchCategories().then(data => question.setCategories(data))\r\n        fetchQuestions().then(data => question.setQuestions(data.rows))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {question.categories.map(category =>\r\n                    <li>{category.name}</li>\r\n                )}\r\n            </ul>\r\n            <div className=\"container mt-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5 col-md-6 col-12 pb-4\">\r\n                        <h1>Questions</h1>\r\n                        {question.questions.map( qn =>\r\n                            <QuestionItem key={qn.id} question={qn} />\r\n\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Questions;","C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\pages\\Profile.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\store\\QuestionStore.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\http\\questionAPI.js",[],"C:\\Users\\dimav\\WebstormProjects\\graduate-work\\client\\src\\components\\QuestionItem.js",[],{"ruleId":"82","severity":1,"message":"83","line":20,"column":7,"nodeType":"84","endLine":20,"endColumn":9,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":9,"nodeType":"88","messageId":"89","endLine":3,"endColumn":16},{"ruleId":"86","severity":1,"message":"90","line":5,"column":22,"nodeType":"88","messageId":"89","endLine":5,"endColumn":32},{"ruleId":"86","severity":1,"message":"91","line":2,"column":9,"nodeType":"88","messageId":"89","endLine":2,"endColumn":17},{"ruleId":"82","severity":1,"message":"92","line":16,"column":7,"nodeType":"84","endLine":16,"endColumn":9,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":25,"column":17,"nodeType":"88","messageId":"89","endLine":25,"endColumn":21},{"ruleId":"82","severity":1,"message":"95","line":13,"column":8,"nodeType":"84","endLine":13,"endColumn":10,"suggestions":"96"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["97"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'MAIN_ROUTE' is defined but never used.","'observer' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["98"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'question'. Either include it or remove the dependency array.",["99"],{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [user]",{"range":"106","text":"107"},"Update the dependencies array to be: [id]",{"range":"108","text":"109"},"Update the dependencies array to be: [question]",{"range":"110","text":"111"},[678,680],"[user]",[471,473],"[id]",[512,514],"[question]"]